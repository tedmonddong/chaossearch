AWSTemplateFormatVersion: 2010-09-09
Description: CHAOSSEARCH Kinesis Firehose Delivery Stream Template
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - 
        Label:
          default: "AWS Acccount Information"
        Parameters:
          - AWSAccountID
          - AWSRegion
      - 
        Label: 
          default: "Resource Names"
        Parameters:
          - KinesisFirehoseDeliveryStreamName
          - KinesisFirehoseIAMRoleARN
          - KinesisFirehoseIAMRoleName
          - KinesisFirehoseLambdaIAMPolicyName
          - LambdaFunctionName
          - LambdaLayerARN
          - LambdaIAMPolicyName
          - LambdaIAMRoleName
      -
        Label:
          default: "Other Information"
        Parameters:
          - S3DestinationBucket
          - S3Prefix
          - S3ErrorOutputPrefix
          - SSACCOUNTNAME
          - SSREGION
          - SSVPCID
          - S3Bucket
          - S3ObjectKey
    ParameterLabels:
      AWSAccountID:
        default: "The AWS Account ID"
      AWSRegion:
        default: "The AWS Region"
      KinesisFirehoseDeliveryStreamName:
        default: "The Kinesis Firehose Delivery Stream name"
      KinesisFirehoseIAMRoleARN: 
        default: "The Kinesis Firehose IAM Role ARN (existing)"
      KinesisFirehoseIAMRoleName: 
        default: "The Kinesis Firehose IAM Role name (existing)"
      KinesisFirehoseLambdaIAMPolicyName:
        default: "The Kinesis Firehose Lambda IAM Policy name"
      LambdaFunctionName: 
        default: "The Lambda Function name"
      LambdaLayerARN:
        default: "The Lambda Layer ARN"
      LambdaIAMPolicyName: 
        default: "The Lambda IAM Policy name"
      LambdaIAMRoleName: 
        default: "The Lambda IAM Role name"
      S3DestinationBucket:
        default: "The s3 bucket for the firehose"
      S3Prefix:
        default: "The s3 bucket prefix"
      S3ErrorOutputPrefix:
        default: "The s3 bucket error output prefix"
      SSACCOUNTNAME:
        default: "The 6th Street Account Name"
      SSREGION:
        default: "The 6th Street Region"
      SSVPCID:
        default: "The 6th Street VPC ID"
      S3Bucket:
        default: "The s3 bucket that contains the lambda code"
      S3ObjectKey:
        default: "The s3 object key for the lambda code"
Parameters:
  AWSAccountID:
    Description: "Your AWS Account ID"
    Type: String
  AWSRegion:
    Description: "The AWS Region"
    Type: String
  KinesisFirehoseDeliveryStreamName:
    Description: "What name do you want to give for the Kinesis Firehose Delivery Stream?"
    Type: String
  KinesisFirehoseIAMRoleARN:
    Description: "What is the ARN of the Kinesis Firehose IAM Role?"
    Type: String
  KinesisFirehoseIAMRoleName:
    Description: "What is the name of the Kinesis Firehose IAM Role?"
    Type: String
  KinesisFirehoseLambdaIAMPolicyName:
    Description: "What name do you want to give for the Kinesis Firehose Lambda IAM Policy?"
    Type: String
  LambdaFunctionName:
    Description: "What name do you want to give for the Lambda Function?"
    Type: String
  LambdaLayerARN:
    Description: "What is the ARN of the Lambda Layer?"
    Type: String
  LambdaIAMPolicyName:
    Description: "What name do you want to give for the Lambda IAM Policy?"
    Type: String
  LambdaIAMRoleName:
    Description: "What name do you want to give for the Lambda IAM Role?"
    Type: String
  S3DestinationBucket:
    Description: "What is the destination s3 bucket for the firehose?"
    Type: String
  S3Prefix:
    Description: "What is the s3 bucket prefix for the firehose?"
    Type: String
  S3ErrorOutputPrefix:
    Description: "What is the s3 bucket error output prefix for the firehose?"
    Type: String
  SSACCOUNTNAME: 
    Description: "What is the 6th Street account name? (i.e. feddev)"
    Type: String
  SSREGION:
    Description: "What is the 6th Street region? (i.e. use2)"
    Type: String
  SSVPCID:
    Description: "What is the 6th Street vpc id? (i.e. vpc06ff6b453726b41b1)"
    Type: String
  S3Bucket:
    Description: "What is the s3 bucket that contains the lambda code?"
    Type: String
  S3ObjectKey:
    Description: "What is the s3 object key for the lambda code?"
    Type: String
Resources:
  KinesisFirehoseDeliveryStream:
    DependsOn: LambdaFunction
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub ${KinesisFirehoseDeliveryStreamName}
      ExtendedS3DestinationConfiguration:
        BucketARN: !Join 
          - ''
          - - 'arn:aws:s3:::'
            - !Sub ${S3DestinationBucket}
        Prefix: !Sub ${S3Prefix}
        ErrorOutputPrefix: !Sub ${S3ErrorOutputPrefix}
        RoleARN: !Ref KinesisFirehoseIAMRoleARN
        ProcessingConfiguration: 
          Enabled: true
          Processors:
            - Type: Lambda
              Parameters:
              - ParameterName: LambdaArn
                ParameterValue: !GetAtt LambdaFunction.Arn
  KinesisFirehoseLambdaPolicy:
    DependsOn: LambdaFunction
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${KinesisFirehoseLambdaIAMPolicyName}
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'lambda:InvokeFunction'
              - 'lambda:GetFunctionConfiguration'
            Resource:
              - !Join
                - ':'
                - - 'arn:aws:lambda'
                  - !Sub ${AWSRegion}
                  - !Sub ${AWSAccountID}
                  - 'function'
                  - !Ref LambdaFunction
                  - '*'
      Roles:
        - Ref: KinesisFirehoseIAMRoleName
  LambdaPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${LambdaIAMPolicyName}
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
            Resource: !Sub 'arn:aws:logs:${AWSRegion}:${AWSAccountID}:*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: !Sub 'arn:aws:logs:${AWSRegion}:${AWSAccountID}:log-group:/aws/lambda/${LambdaFunctionName}:*'
          - Effect: Allow
            Action:
              - 'firehose:PutRecordBatch'
            Resource: !Sub 'arn:aws:firehose:${AWSRegion}:${AWSAccountID}:deliverystream/${KinesisFirehoseDeliveryStreamName}'
  LambdaRole:
    DependsOn: LambdaPolicy
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${LambdaIAMRoleName}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - !Ref LambdaPolicy
  LambdaFunction:
    DependsOn: LambdaRole
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${LambdaFunctionName}
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Handler: lambda_function.lambda_handler
      Layers: 
        - !Sub ${LambdaLayerARN}
      Timeout: 180
      Environment:
        Variables:
          SS_ACCOUNT_NAME: !Sub ${SSACCOUNTNAME}
          SS_REGION: !Sub ${SSREGION}
          SS_VPCID: !Sub ${SSVPCID}
      Code:
        S3Bucket: !Sub '${S3Bucket}'
        S3Key: !Sub '${S3ObjectKey}'
Outputs:
  KinesisFirehoseDeliveryStreamARN:
    Description: The ARN of the new kinesis firehose delivery stream
    Value:
      Fn::GetAtt:
      - KinesisFirehoseDeliveryStream
      - Arn
  LambdaFunctionARN:
    Description: The ARN of the new lambda runction for the kinesis firehose delivery stream
    Value:
      Fn::GetAtt:
      - LambdaFunction
      - Arn      
  LambdaRoleARN:
    Description: The ARN of the new iam role for the lambda function
    Value:
      Fn::GetAtt:
      - LambdaRole
      - Arn